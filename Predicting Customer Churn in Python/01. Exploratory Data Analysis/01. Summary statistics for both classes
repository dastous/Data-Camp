#Consider the following .groupby() code:

# Group by x and compute the standard deviation
#df.groupby(['x']).std()
#Here, a DataFrame df is grouped by a column 'x', and then the standard deviation is calculated across all columns of df for each value of 'x'. The .groupby() method is incredibly useful when you want to investigate specific columns of your dataset. Here, you're going to explore the 'Churn' column further to see if there are differences between churners and non-churners. A subset version of the telco DataFrame, consisting of the columns 'Churn', 'CustServ_Calls', and 'Vmail_Message' is available in your workspace.

#If you need a refresher on how .groupby() works, please refer back to the pre-requisite Manipulating DataFrames with pandas course.

#Instructions 1/3
#35 XP
#Group telco by 'Churn' and compute the mean.

# Group telco by 'Churn' and compute the mean
print(telco.groupby(['Churn']).mean())

#Instructions 2/3
#35 XP
#Adapt your code to compute the standard deviation instead of the mean.

# Adapt your code to compute the standard deviation
print(telco.groupby(['Churn']).std())

#Instructions 3/3
#30 XP
#Question
#Based on the results you see in the IPython Shell, select the correct statement from the options below.

#Possible Answers
#Churners leave more voice mail messages than non-churners.
#Churners make more customer service calls than non-churners.**
#Churners leave fewer voice mail messages than non-churners.
#Churners make fewer customer service calls than non-churners.
