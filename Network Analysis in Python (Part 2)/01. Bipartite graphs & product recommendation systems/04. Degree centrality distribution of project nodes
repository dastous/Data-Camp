#Degree centrality distribution of project nodes
#Now it's time to plot the degree cenrality distribution for the 'projects' partition of G. The steps to do this are exactly the same as in the previous exercise. For your convenience, matplotlib.pyplot has been pre-imported as plt.

#Go for it!

#Instructions
#100 XP
#Obtain a list called project_nodes corresponding to the 'projects' nodes of G.
#Using the nx.degree_centrality() function, compute the degree centralities for each node in G. Store the result as dcs.
#Use a list comprehension to compute the degree centralities for each node in project_nodes. Store the result as project_dcs.
#Plot a histogram of the degree distribution of projects, using plt.hist() and project_dcs.


# Get the 'projects' nodes: project_nodes
project_nodes = get_nodes_from_partition(G,'projects')

# Compute the degree centralities: dcs
dcs = nx.degree_centrality(G)

# Get the degree centralities for project_nodes: project_dcs
project_dcs = [dcs[n] for n in project_nodes]

# Plot the degree distribution of project_dcs
plt.yscale('log')
plt.hist(project_dcs, bins=20)
plt.show()
